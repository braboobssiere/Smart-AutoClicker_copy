name: Release

on:
  workflow_dispatch:
  release:
    types: [created]
  push:
    branches:
      - master 

jobs:
  build:
    name: Build application
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: set up JDK 21
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '21'    
        
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}--

    - name: set NDK
      shell: bash
      run: |
        set -x
        echo "ANDROID_NDK=$ANDROID_NDK_LATEST_HOME" >> $GITHUB_ENV
        echo "ANDROID_NDK_HOME=$ANDROID_NDK_LATEST_HOME" >> $GITHUB_ENV
        echo "ANDROID_NDK_ROOT=$ANDROID_NDK_LATEST_HOME" >> $GITHUB_ENV

    - name: Restore keystore
      run: |
        echo "${{ secrets.RELEASE_KEYSTORE }}" > smartautoclicker.jks.asc
        gpg --batch --yes --decrypt --passphrase ${{ secrets.RELEASE_KEYSTORE_PASSPHRASE }} --output smartautoclicker/smartautoclicker.jks smartautoclicker.jks.asc
  
    - name: Build with Gradle
      run: |
        ./gradlew --info \
          -PsigningStorePassword="${{ secrets.SIGNING_STORE_PASSWORD }}" \
          -PsigningKeyAlias="${{ secrets.SIGNING_KEY_ALIAS }}" \
          -PsigningKeyPassword="${{ secrets.SIGNING_KEY_PASSWORD }}" \
          assembleFDroidRelease bundleFDroidRelease

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: smartautoclicker-release
        path: smartautoclicker/build/outputs/
        
    - name: Generate tag 
      id: prep
      run: |
          TIMESTAMP=$(date -u +%Y%m%d-%H%M%S)
          TAG="${TIMESTAMP}"
          echo "TAG=$TAG" >> $GITHUB_OUTPUT 

    - name: Create draft release
      uses: softprops/action-gh-release@v2.3.2
      with:
          tag_name: ${{ steps.prep.outputs.TAG }}
          name: "Release ${{ steps.prep.outputs.TAG }}"
          files: |
            smartautoclicker/build/outputs/**

    - name: Cleanup tag
      run: git push --delete origin "${{ steps.prep.outputs.TAG }}" || true
